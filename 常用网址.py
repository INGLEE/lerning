1.脚本之家

2.开源社区

3.CSDN

4.PyQt5 中文教程 http://code.py40.com/pyqt5/14.html

5.开源中国 云溪社区 IBM
6. 陈月白 博客云http://www.cnblogs.com/chenyuebai/p/7150382.html

python的selenium可以实现代码打开浏览器，输入url访问网站，还可以模拟键盘事件，模拟鼠标事件，能模拟这两个功能，
理论上，代码就是人了，具体要实现某个用例，就是一个方法，而一条方法就等于一条用例，用例很多，方法就需要被管理，通常按应用的模块进行区分，
一个用例通常就是测某个模块的某个功能，因此模块可以被当做子类进行定义
用uinitest是因为，很多测试用的功能，那里都已经集成了
其实不用，也可以实现测试用例的管理
只不过可能自己写的测试框架，本身就存在问题


就是说实际上你是用python+selenium做测试，unitest做框架，维护你的测试脚本.


接口测试，谷歌浏览器本身就有开发者插件.但如果你想做高级的欺骗要单独下个
抓包也要会，我前段时间才学的，之前也没做过接口测试，偷师学了点欺骗技术而已
例如ip欺骗 外挂的原理就是欺骗;https这些加密，就是防止这个
后面再高级点，还涉及接口性能后面再高级点，还涉及接口性能
性能再高点，就是更细化的接口安全漏洞
有自动化接口测试的，得用现成的工具，或者自己封装一个工具去做

web性能，入门可以从loadrunner学起,不过有更高级，更普遍，也是大多数公司用的,现在web使用的是jmeter.

web，还别觉得有多叼，除了性能和安全这两个例外，像自动化以后也只是流水线测试上，必须的技能而已，
而且技术还得不断迭代,性能也不是哪家公司都侧重的..


后端就是客户看不到的代码部分啊，或者数据库这些学起来很快的，最多半个月就达到熟悉的地步了,这是web测试要有的基本技能很杂，但都需要.
终端可以理解为手机的APP，或者电脑的客户端,都是C/S架构的了